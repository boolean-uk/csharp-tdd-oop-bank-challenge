@startuml

abstract Account {
+CalculateFunds()
+TransferTo(float amount, Account account)
+SetBranch(Branch branch)
---
+Guid AccountNumber
+string Owner
+string AccountName
+Branch? Branch
+List<Transaction> transactions
}

class Bank {
List<User> Users
List<Account> Accounts
}

enum Branch {
+Oslo
+Trondheim
+Kristiansand
+Bergen
}

class CurrentAccount {
+Deposit(float amount)
+Withdraw(float amount)
+RequestOverdraft(float amount)
+ManageOverdraftRequest(bool approve)
---
float OverdraftAmount
}

enum Role {
+Customer
+Engineer
+Manager
}

class SavingsAccount {
+LockAccount()
+UnlockAccount()
---
+bool Locked()
}

struct Transaction {
---
+Guid? ToAccountNumber
+Guid? FromAccountNumber
+float Amount
+DateTime TimeOfTransaction
}

class User {
+CreateCurrentAccount(string name)
+CreateSavingsAccount(string name)
+GenerateBankStatement()
+SendBankStatementToPhone(string number)
---
+Role Role
+string Username

}

''''''''''''''''''''''''''''''''''''''''

Account <|-- CurrentAccount
Account <|-- SavingsAccount
Account <|-- Transaction

Bank -- User
Bank -- Account

Branch <|-- Account

Role <|-- User

User <|-- Account

@enduml